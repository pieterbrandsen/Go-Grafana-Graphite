version: "3.5"

volumes:
  grafana_data:
  private_grafana_data:
services:
  custom-api:
    build: src/customApi
    ports:
      - "8000:8000"
    volumes:
      - ./go-carbon-storage/whisper:/go-carbon-storage
      - ./exampleStats/dashboard.json:/app/dashboard.json
      - ./logs/customApi:/app/logs
    environment:
     - POSTGRES_URL=http://postgres:3000
     - GRAFANA_URL=http://grafana:3000
     - GRAFANA_USER=admin
     - GRAFANA_PASSWORD=password
    networks:
      - frontend
    depends_on:
      - grafana
  stats-getter:
    build: src/statsGetter
    ports:
      - "8001:8000"
    volumes:
      - ./logs/statsGetter:/app/logs
    networks:
      - backend
    depends_on:
      - carbon-relay-ng
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - CARBON_RELAY_NG_URL=http://carbon-relay-ng:2003
  carbon-relay-ng:
    image: grafana/carbon-relay-ng
    depends_on:
      - go-carbon
    volumes:
      - ./config/carbon-relay-ng:/conf
    healthcheck:
      test: nc -zv localhost 2003
      interval: 10s
      timeout: 1s
      retries: 3
    networks:
      - backend
      - frontend
  go-carbon:
    image: ghcr.io/go-graphite/go-carbon:latest
    volumes:
      - ./config/go-carbon/go-carbon.conf:/etc/go-carbon/go-carbon.conf
      - ./config/go-carbon:/conf
      - ./go-carbon-storage:/graphite
      - ./logs/goCarbon:/log
    networks:
      - backend
  carbon-api:
    image: carbon-api
    volumes:
      - ./config/carbonapi/carbonapi.yml:/etc/carbonapi.yml
      - ./config/carbonapi:/conf:ro
      - ./logs/carbonApi:/log
    depends_on:
      - go-carbon
    healthcheck:
      test: "curl -fsSL -o /dev/null http://localhost:8080/lb_check"
      interval: 10s
      timeout: 1s
      retries: 3
    networks:
      - backend
  stats-gateway:
    image: stats-gateway
    depends_on:
      - carbon-api
    environment:
     - BACKEND_URL=http://carbon-api:8081
     - GRAFANA_URL=http://grafana:3000
    networks:
      - backend
      - frontend
  grafana:
    image: grafana/grafana-oss:9.0.4-ubuntu
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana
      - ./logs/grafana:/var/log/grafana
    ports:
      - 3000:3000
    depends_on:
      - stats-gateway
    healthcheck:
      test: "curl -fsSL -o /dev/null http://localhost:3000/login"
      interval: 10s
      timeout: 1s
      retries: 3
    networks:
      - frontend
  private_grafana:
    image: grafana/grafana-oss:9.0.4-ubuntu
    volumes:
      - private_grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana
      - ./logs/privateGrafana:/var/log/grafana
    ports:
      - 3001:3000
    depends_on:
      - carbon-api
    healthcheck:
      test: "curl -fsSL -o /dev/null http://localhost:3000/login"
      interval: 10s
      timeout: 1s
      retries: 3
    networks:
      - frontend
      - backend
  postgres:
    image: postgres
    volumes:
      - ./postgres-storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    networks:
      - backend

networks:
  frontend:
  backend: